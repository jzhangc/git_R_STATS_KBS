axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue", guide = "colorbar") +
guide_colourbar(ticks = FALSE) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue") +
guide_colourbar(ticks = FALSE) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue", guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue", breaks = 1, guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue", breaks = c(min(NrmMean), max(NrmMean)), guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(with(min(tstDfplt, NrmMean)), with(max(tstDfplt, NrmMean))),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(with(min(tstDfPlt, NrmMean)), with(max(tstDfPlt, NrmMean))),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(with(tstDfPlt, min(NrmMean)), with(tstDfPlt, max(NrmMean))),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(floor(with(tstDfPlt, min(NrmMean) * 0.05))/0.05, ceiling(with(tstDfPlt, max(NrmMean))*0.05)/0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ceiling(with(tstDfPlt, max(NrmMean))*0.05)/0.05
floor(with(tstDfPlt, min(NrmMean) * 0.05))/0.05
ceiling(with(tstDfPlt, max(NrmMean))
*0.05)
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, ceiling(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ceiling(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05
floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05
c(floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, ceiling(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05)
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, ceiling(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE))
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, ceiling(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE))
guide = guide_colorbar(ticks = FALSE)
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, ceiling(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE))
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
floor(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data8.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
round(1.456,digits=2)
round(with(tstDfPlt, max(NrmMean)), digits = 1)
round(with(tstDfPlt, min(NrmMean), digits = 1)
round(with(tstDfPlt, min(NrmMean)), digits = 1)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data8.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
tstData<-read.csv(file="data6.csv",header=TRUE, na.strings = "NA", stringsAsFactors = FALSE)
tstData[[1]]<-factor(tstData[[1]],levels=c(unique(tstData[[1]])))
#### normalize everything to control as 1
tstMean<-sapply(colnames(tstData)[-1],
function(i) tapply(tstData[[i]], tstData[1], mean, na.rm=TRUE))
tstMean<-data.frame(tstMean)
tstMean$Condition<-factor(rownames(tstMean),levels=c(rownames(tstMean)))
length(colnames(tstMean))
tstMeanNrm<-data.frame(sapply(colnames(tstMean)[-length(colnames(tstMean))],
function(i)sapply(tstMean[[i]],function(j)j/tstMean[[i]][1])),
Condition = factor(rownames(tstMean),levels=c(rownames(tstMean))))
## for getting the "a", "b", "ab" etc labels
library(multcompView)
# a function swtiches the order around the "-" symbol of a character string: from "a-b" to "b-a".
revSort<-function(x){
uLst<-unlist(strsplit(x, "-"))
uLst<-uLst[c(2,1)]
uLst<-paste(uLst,collapse = "-") # collapse paste things and put them into ONE string object
uLst
}
cNm<-colnames(tstData)
fml<-paste(colnames(tstData)[4],colnames(tstData)[1],sep="~") # tstData
eqlvar<-bartlett.test(formula(fml),data=tstData)
##### set the letters
##### for Tukey test ####
Tt<-sapply(colnames(tstData)[-1],
function(i) {
fml<-paste(i,cNm[1],sep="~")
Mdl<-aov(formula(fml),data=tstData)
Tk<-TukeyHSD(Mdl)
Tkp<-Tk[[1]][,4]
names(Tkp)<-sapply(names(Tkp),function(j)revSort(j)) # change orders (from b-a to a-b)
Tkp<-multcompLetters(Tkp)["Letters"] # from the multcompView package.
Lbl<-names(Tkp[["Letters"]])
Lvl<-data.frame(Lbl, Tkp[["Letters"]],
stringsAsFactors = FALSE)
colnames(Lvl)<-c(colnames(tstData)[1],i)
Lvl
},simplify = FALSE)
cTt <- Reduce(function(x, y) merge(x, y, all=T,
by=colnames(tstData)[1],sort=FALSE),
Tt, accumulate=F)
colnames(cTt)[-1]<-sapply(colnames(tstData)[-1],
function(x)paste(x,"Lbl",sep=""))
tstMeanNrmMLT<-melt(tstMeanNrm,id.vars=colnames(tstMeanNrm)[length(colnames(tstMeanNrm))]) # melt mean
tstMeanNrmMLT$id<-rownames(tstMeanNrmMLT)
cTtMLT<-melt(cTt,id.vars=colnames(cTt)[1]) # melt labels
cTtMLT$id<-rownames(cTtMLT)
cTtMLT[1]<-as.factor(cTtMLT[[1]])
colnames(tstMeanNrmMLT)[3]<- "NrmMean" # give unique variable names
colnames(cTtMLT)[1:3]<-c(colnames(tstMeanNrmMLT)[1],"variableLbl","Lbl") # same as above and make sure to have the same "Condition" variable name for merging
tstDfPlt<-merge(tstMeanNrmMLT, cTtMLT, by = c("id", "Condition"), sort = FALSE)
str(tstDfPlt)
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(round(with(tstDfPlt, min(NrmMean)), digits = 1), round(with(tstDfPlt, max(NrmMean)), digits = 1)),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data8.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data2.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data8.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
tstData<-read.csv(file="data8.csv",header=TRUE, na.strings = "NA", stringsAsFactors = FALSE)
tstData[[1]]<-factor(tstData[[1]],levels=c(unique(tstData[[1]])))
#### normalize everything to control as 1
tstMean<-sapply(colnames(tstData)[-1],
function(i) tapply(tstData[[i]], tstData[1], mean, na.rm=TRUE))
tstMean<-data.frame(tstMean)
tstMean$Condition<-factor(rownames(tstMean),levels=c(rownames(tstMean)))
length(colnames(tstMean))
tstMeanNrm<-data.frame(sapply(colnames(tstMean)[-length(colnames(tstMean))],
function(i)sapply(tstMean[[i]],function(j)j/tstMean[[i]][1])),
Condition = factor(rownames(tstMean),levels=c(rownames(tstMean))))
## for getting the "a", "b", "ab" etc labels
library(multcompView)
# a function swtiches the order around the "-" symbol of a character string: from "a-b" to "b-a".
revSort<-function(x){
uLst<-unlist(strsplit(x, "-"))
uLst<-uLst[c(2,1)]
uLst<-paste(uLst,collapse = "-") # collapse paste things and put them into ONE string object
uLst
}
cNm<-colnames(tstData)
fml<-paste(colnames(tstData)[4],colnames(tstData)[1],sep="~") # tstData
eqlvar<-bartlett.test(formula(fml),data=tstData)
##### set the letters
##### for Tukey test ####
Tt<-sapply(colnames(tstData)[-1],
function(i) {
fml<-paste(i,cNm[1],sep="~")
Mdl<-aov(formula(fml),data=tstData)
Tk<-TukeyHSD(Mdl)
Tkp<-Tk[[1]][,4]
names(Tkp)<-sapply(names(Tkp),function(j)revSort(j)) # change orders (from b-a to a-b)
Tkp<-multcompLetters(Tkp)["Letters"] # from the multcompView package.
Lbl<-names(Tkp[["Letters"]])
Lvl<-data.frame(Lbl, Tkp[["Letters"]],
stringsAsFactors = FALSE)
colnames(Lvl)<-c(colnames(tstData)[1],i)
Lvl
},simplify = FALSE)
cTt <- Reduce(function(x, y) merge(x, y, all=T,
by=colnames(tstData)[1],sort=FALSE),
Tt, accumulate=F)
colnames(cTt)[-1]<-sapply(colnames(tstData)[-1],
function(x)paste(x,"Lbl",sep=""))
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean)), digits = 1), floor(with(tstDfPlt, max(NrmMean)), digits = 1)),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(round(with(tstDfPlt, min(NrmMean)), digits = 1), floor(with(tstDfPlt, max(NrmMean)), digits = 1)),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data8.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data1.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data8.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "dodgerblue3", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data8.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data.csv", Tp ="Tukey", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", Tp ="Tukey", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data8.csv", Tp ="Tukey", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
rbioplot_heatmap("data6.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white", fontType = "mono")
rbioplot_heatmap("data6.csv", Tp = "Tukey", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white", fontType = "mono")
rbioplot_heatmap("data6.csv", tileLow = "skyblue", tileHigh = "midnightblue", tileTxtColour = "white")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
rbioplot("data.csv", legendTtl = TRUE)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
?rbioplot_heatmap
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv")
remove.packages(“frogplots”)
