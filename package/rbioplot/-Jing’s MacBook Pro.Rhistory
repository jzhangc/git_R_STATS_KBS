length(colnames(tstMean))
tstMeanNrm<-data.frame(sapply(colnames(tstMean)[-length(colnames(tstMean))],
function(i)sapply(tstMean[[i]],function(j)j/tstMean[[i]][1])),
Condition = factor(rownames(tstMean),levels=c(rownames(tstMean))))
## for getting the "a", "b", "ab" etc labels
library(multcompView)
# a function swtiches the order around the "-" symbol of a character string: from "a-b" to "b-a".
revSort<-function(x){
uLst<-unlist(strsplit(x, "-"))
uLst<-uLst[c(2,1)]
uLst<-paste(uLst,collapse = "-") # collapse paste things and put them into ONE string object
uLst
}
cNm<-colnames(tstData)
fml<-paste(colnames(tstData)[4],colnames(tstData)[1],sep="~") # tstData
eqlvar<-bartlett.test(formula(fml),data=tstData)
##### set the letters
##### for Tukey test ####
Tt<-sapply(colnames(tstData)[-1],
function(i) {
fml<-paste(i,cNm[1],sep="~")
Mdl<-aov(formula(fml),data=tstData)
Tk<-TukeyHSD(Mdl)
Tkp<-Tk[[1]][,4]
names(Tkp)<-sapply(names(Tkp),function(j)revSort(j)) # change orders (from b-a to a-b)
Tkp<-multcompLetters(Tkp)["Letters"] # from the multcompView package.
Lbl<-names(Tkp[["Letters"]])
Lvl<-data.frame(Lbl, Tkp[["Letters"]],
stringsAsFactors = FALSE)
colnames(Lvl)<-c(colnames(tstData)[1],i)
Lvl
},simplify = FALSE)
cTt <- Reduce(function(x, y) merge(x, y, all=T,
by=colnames(tstData)[1],sort=FALSE),
Tt, accumulate=F)
colnames(cTt)[-1]<-sapply(colnames(tstData)[-1],
function(x)paste(x,"Lbl",sep=""))
tstMeanNrmMLT<-melt(tstMeanNrm,id.vars=colnames(tstMeanNrm)[length(colnames(tstMeanNrm))]) # melt mean
tstMeanNrmMLT$id<-rownames(tstMeanNrmMLT)
cTtMLT<-melt(cTt,id.vars=colnames(cTt)[1]) # melt labels
cTtMLT$id<-rownames(cTtMLT)
cTtMLT[1]<-as.factor(cTtMLT[[1]])
colnames(tstMeanNrmMLT)[3]<- "NrmMean" # give unique variable names
colnames(cTtMLT)[1:3]<-c(colnames(tstMeanNrmMLT)[1],"variableLbl","Lbl") # same as above and make sure to have the same "Condition" variable name for merging
tstDfPlt<-merge(tstMeanNrmMLT, cTtMLT, by = c("id", "Condition"), sort = FALSE)
str(tstDfPlt)
head(tstDfPlt)
require(ggplot2)
require(reshape2)
require(multcompView) # for getting the "a", "b", "ab" etc labels
tstMeanNrmMLT<-melt(tstMeanNrm,id.vars=colnames(tstMeanNrm)[length(colnames(tstMeanNrm))]) # melt mean
tstMeanNrmMLT$id<-rownames(tstMeanNrmMLT)
cTtMLT<-melt(cTt,id.vars=colnames(cTt)[1]) # melt labels
cTtMLT$id<-rownames(cTtMLT)
cTtMLT[1]<-as.factor(cTtMLT[[1]])
colnames(tstMeanNrmMLT)[3]<- "NrmMean" # give unique variable names
colnames(cTtMLT)[1:3]<-c(colnames(tstMeanNrmMLT)[1],"variableLbl","Lbl") # same as above and make sure to have the same "Condition" variable name for merging
tstDfPlt<-merge(tstMeanNrmMLT, cTtMLT, by = c("id", "Condition"), sort = FALSE)
str(tstDfPlt)
head(tstDfPlt)
#### ploting
plt <- ggplot(tstDfPlt, aes(x =
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="top",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="left",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="bottom",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtooo
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
?guide_colorbar
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
legend.direction = "vertical"
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
legend.direction = "vertical",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, title.position = "left")) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
legend.direction = "vertical",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, title.position = "top")) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
?guide_colorbar
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.hjust = 1)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.hjust = 0)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.hjust = 0.5)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.vjust = 0.5)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.vjust = 0.5, direction = "vertical")) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.vjust = 0.5, direction = "horizontal")) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.vjust = 0.5, direction = "horizontal")) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, label.vjust = 0.5, direction = "horizontal")) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, barheight = 1)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, barheight = 10)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, barheight = 5)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, barheight = 8)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
ggplot(tstDfPlt, aes(x = Condition, y = variable)) +
geom_tile(aes(fill = NrmMean), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue",
breaks = c(ceiling(with(tstDfPlt, min(NrmMean) / 0.05)) * 0.05, floor(with(tstDfPlt, max(NrmMean)) / 0.05) * 0.05),
guide = guide_colorbar(ticks = FALSE, barheight = 6)) +
geom_text(aes(x = Condition, y = variable,label = Lbl), color = "black") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
theme(panel.background = element_rect(fill = 'white', colour = 'white'),
panel.border = element_blank(),
axis.ticks = element_line(colour = "white"),
legend.position="right",
axis.text.x = element_text(size = 10, hjust = 0.5, margin = margin(t = 5, r = 5, b = 3, l = 5, unit = "pt")),
axis.text.y = element_text(size = 10, hjust = 0.5)) +
ggtitle(NULL) +
xlab(NULL) + # we can hide it using NULL
ylab("test")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
devtools::document()
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
rbioplot_heatmap("data6.csv", legendTtl = TRUE)
rbioplot_heatmap("data6.csv", legendTtl = TRUE, legendPos = "right")
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/sample_data/")
require(RBioplot)
rbiostats("casestudy-wb-cyclin.csv", Tp = "t-test")
devtools::document()
setwd("~/OneDrive/Storey lab/current_work/switch_to_R/git_R_STATS_KBS/package/rbioplot") # package directory
devtools::document()
library(RBioplot)
devtools::document()
